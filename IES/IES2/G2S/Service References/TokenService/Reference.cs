//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace App.G2S.TokenService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TokenService.TokenServiceSoap")]
    public interface TokenServiceSoap {
        
        // CODEGEN: 消息 TokenGetCredenceRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenGetCredence", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        App.G2S.TokenService.TokenGetCredenceResponse TokenGetCredence(App.G2S.TokenService.TokenGetCredenceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenGetCredence", ReplyAction="*")]
        System.Threading.Tasks.Task<App.G2S.TokenService.TokenGetCredenceResponse> TokenGetCredenceAsync(App.G2S.TokenService.TokenGetCredenceRequest request);
        
        // CODEGEN: 消息 ClearTokenRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClearToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        App.G2S.TokenService.ClearTokenResponse ClearToken(App.G2S.TokenService.ClearTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClearToken", ReplyAction="*")]
        System.Threading.Tasks.Task<App.G2S.TokenService.ClearTokenResponse> ClearTokenAsync(App.G2S.TokenService.ClearTokenRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MySoapHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userIDField;
        
        private string passWordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("UserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string PassWord {
            get {
                return this.passWordField;
            }
            set {
                this.passWordField = value;
                this.RaisePropertyChanged("PassWord");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TokenGetCredence", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class TokenGetCredenceRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public App.G2S.TokenService.MySoapHeader MySoapHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string tokenValue;
        
        public TokenGetCredenceRequest() {
        }
        
        public TokenGetCredenceRequest(App.G2S.TokenService.MySoapHeader MySoapHeader, string tokenValue) {
            this.MySoapHeader = MySoapHeader;
            this.tokenValue = tokenValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TokenGetCredenceResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class TokenGetCredenceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public object TokenGetCredenceResult;
        
        public TokenGetCredenceResponse() {
        }
        
        public TokenGetCredenceResponse(object TokenGetCredenceResult) {
            this.TokenGetCredenceResult = TokenGetCredenceResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClearToken", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ClearTokenRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public App.G2S.TokenService.MySoapHeader MySoapHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string tokenValue;
        
        public ClearTokenRequest() {
        }
        
        public ClearTokenRequest(App.G2S.TokenService.MySoapHeader MySoapHeader, string tokenValue) {
            this.MySoapHeader = MySoapHeader;
            this.tokenValue = tokenValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClearTokenResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ClearTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public object ClearTokenResult;
        
        public ClearTokenResponse() {
        }
        
        public ClearTokenResponse(object ClearTokenResult) {
            this.ClearTokenResult = ClearTokenResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TokenServiceSoapChannel : App.G2S.TokenService.TokenServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TokenServiceSoapClient : System.ServiceModel.ClientBase<App.G2S.TokenService.TokenServiceSoap>, App.G2S.TokenService.TokenServiceSoap {
        
        public TokenServiceSoapClient() {
        }
        
        public TokenServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TokenServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TokenServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TokenServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        App.G2S.TokenService.TokenGetCredenceResponse App.G2S.TokenService.TokenServiceSoap.TokenGetCredence(App.G2S.TokenService.TokenGetCredenceRequest request) {
            return base.Channel.TokenGetCredence(request);
        }
        
        public object TokenGetCredence(App.G2S.TokenService.MySoapHeader MySoapHeader, string tokenValue) {
            App.G2S.TokenService.TokenGetCredenceRequest inValue = new App.G2S.TokenService.TokenGetCredenceRequest();
            inValue.MySoapHeader = MySoapHeader;
            inValue.tokenValue = tokenValue;
            App.G2S.TokenService.TokenGetCredenceResponse retVal = ((App.G2S.TokenService.TokenServiceSoap)(this)).TokenGetCredence(inValue);
            return retVal.TokenGetCredenceResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<App.G2S.TokenService.TokenGetCredenceResponse> App.G2S.TokenService.TokenServiceSoap.TokenGetCredenceAsync(App.G2S.TokenService.TokenGetCredenceRequest request) {
            return base.Channel.TokenGetCredenceAsync(request);
        }
        
        public System.Threading.Tasks.Task<App.G2S.TokenService.TokenGetCredenceResponse> TokenGetCredenceAsync(App.G2S.TokenService.MySoapHeader MySoapHeader, string tokenValue) {
            App.G2S.TokenService.TokenGetCredenceRequest inValue = new App.G2S.TokenService.TokenGetCredenceRequest();
            inValue.MySoapHeader = MySoapHeader;
            inValue.tokenValue = tokenValue;
            return ((App.G2S.TokenService.TokenServiceSoap)(this)).TokenGetCredenceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        App.G2S.TokenService.ClearTokenResponse App.G2S.TokenService.TokenServiceSoap.ClearToken(App.G2S.TokenService.ClearTokenRequest request) {
            return base.Channel.ClearToken(request);
        }
        
        public object ClearToken(App.G2S.TokenService.MySoapHeader MySoapHeader, string tokenValue) {
            App.G2S.TokenService.ClearTokenRequest inValue = new App.G2S.TokenService.ClearTokenRequest();
            inValue.MySoapHeader = MySoapHeader;
            inValue.tokenValue = tokenValue;
            App.G2S.TokenService.ClearTokenResponse retVal = ((App.G2S.TokenService.TokenServiceSoap)(this)).ClearToken(inValue);
            return retVal.ClearTokenResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<App.G2S.TokenService.ClearTokenResponse> App.G2S.TokenService.TokenServiceSoap.ClearTokenAsync(App.G2S.TokenService.ClearTokenRequest request) {
            return base.Channel.ClearTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<App.G2S.TokenService.ClearTokenResponse> ClearTokenAsync(App.G2S.TokenService.MySoapHeader MySoapHeader, string tokenValue) {
            App.G2S.TokenService.ClearTokenRequest inValue = new App.G2S.TokenService.ClearTokenRequest();
            inValue.MySoapHeader = MySoapHeader;
            inValue.tokenValue = tokenValue;
            return ((App.G2S.TokenService.TokenServiceSoap)(this)).ClearTokenAsync(inValue);
        }
    }
}
